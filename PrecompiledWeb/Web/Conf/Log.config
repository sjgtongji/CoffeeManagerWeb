<?xml version="1.0" encoding="utf-8" ?>
<log4net>
  <!-- /////////////////////////////////////////////// 配置规则说明和过滤器定义规则参考 //////////////////////////////////////////////////////////////// -->
  <!-- 所有文件日志使用 XMS.Core.Logging.Log4net.CustomFileAppender 类型，该输出器类型定义了 Enable 和 DirectoryByDate 两个属性，其中：
            Enable 属性用于控制输出器的可用性，可以在需要的时候将该属性设为 false 以禁用输出器，默认为 false；
            DirectoryByDate 属性用于控制日志文件是否按日期分文件夹，默认为 false；
            
            文件输出器的默认锁定模式设置为排他模式 log4net.Appender.FileAppender+ExclusiveLock ：
                  这种模式下，日志文件一旦打开，下次将复用已打开的文件流，这可提供较好的性能，但不能在运行时被修改、删除（通常也不允许这样做）。
            如果一定要在运行时修改删除日志文件，可将锁定模式设置为最小锁定模式 log4net.Appender.FileAppender+MinimalLock ：
                  这种模式下，每写一条日志，都要重新打开日志文件，写完后关闭日志文件，在高并发、高访问的情况下需要考虑性能问题。
  -->
  <!--
  每一个日志输出器（appender）可以定义多个过滤器，对于每一个日志事件，按定义的过滤器的顺序从上到下进行过滤，对每一个过滤器，按以下规则进行处理：
        如果日志满足当前滤规器定义的过滤条件，那么
            如果过滤器的 acceptOnMatch 属性为 true ，则接受并立即输出该日志事件；
            否则阻止输出该日志；
        否则（即不满足过滤器限定的条件，这样的日志认为是中性的（默认接受并输出）），将转到下一条过滤器继续判断，直到一个过滤器接受并输出它或者阻止它；
  最后，如果某日志事件经过所有的过滤器处理完之后，没有任何一个过滤器明确接受并输出它或者明确阻止它，则默认选择接受并输出该日志。
  
  StringMatchFilter 属性过滤器：
  1. 过滤包含特定字符串的日志消息并立即输出
  <filter type="log4net.Filter.StringMatchFilter">
            <key value="Category" />
            <stringToMatch value="xxxx"/>
            <acceptOnMatch value="true"/>
          </filter>
        2. 过滤匹配指定正则表达式定义的消息并立即输出
          <filter type="log4net.Filter.PropertyFilter">
            <key value="Category" />
            <regexToMatch value="^(?is:category1|category2|category3)$"/>
            <acceptOnMatch value="true"/>
          </filter>

  PropertyFilter 属性过滤器：
        1. 按类别属性过滤包含特定字符串的日志并立即输出
          <filter type="log4net.Filter.PropertyFilter">
            <key value="Category" />
            <stringToMatch value="xxxx"/>
            <acceptOnMatch value="true"/>
          </filter>
        2. 按类别属性过滤匹配指定正则表达式定义的多个不区分大小写的多个类别并立即输出
          <filter type="log4net.Filter.PropertyFilter">
            <key value="Category" />
            <regexToMatch value="^(?is:category1|category2|category3)$"/>
              <acceptOnMatch value="true"/>
          </filter>
          
  LevelMatchFilter 级别过滤器：
        1. 过滤指定级别的日志并立即输出
          <filter type="log4net.Filter.LevelMatchFilter">
            <levelToMatch value="INFO"/>
            <acceptOnMatch value="true"/>
          </filter>
          
  LevelFilter 级别范围过滤器：
        1. 顾虑指定级别范围的日志并立即输出
         <filter type="log4net.Filter.LevelRangeFilter">
            <levelMin value="INFO" />
            <levelMax value="FATAL" />
            <acceptOnMatch value="true"/>
          </filter>
          
   DenyAllFilter 阻止所有日志事件：
          <filter type="log4net.Filter.DenyAllFilter" />

  -->
  <!-- ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// -->


  <!--  定义 Root 记录器，该节点为 <log4net> 的子元素，root 记录器本质上是一个 logger，一般 logger 可以具有的属性它都可以有；
        root 日志记录器是记录器层次结构的根。所有记录器最终继承这个记录器。 -->
  <root>
    <!-- 定义 整体日志记录的级别，发布到生产服务器必须将改级别更改为 Info 以上。 -->
    <level value="Debug"/>
  </root>

  <!-- 定义 名称为 release 的日志记录器，该记录器适用于 release 运行模式，不要修改它的名称，相应的，在针对 demo 运行模式，后面会定义一个名称为 demo 的日志记录器。-->
  <logger name="release">
    <level value="Debug"/>

    <!-- 定义日志引用的输出器，该日志记录器将使用这些输出器输出日志，一个日志记录器可以定义多个日志输出器，如果这样做，日志事件将依次顺序输出；
          这里仅定义一个具有缓冲功能的日志输出器，这样日志事件总是先缓冲、再输出。 -->
    <appender-ref ref="release"/>
  </logger>

  <!-- 定义名称为 release 的缓冲日志输出器，该缓冲日志输出器仅用于名称为 release 的日志记录器，日志事件产生后首先输出到这里 -->
  <appender name="release" type="XMS.Core.Logging.Log4net.CustomBufferAppender,XMS.Core" >
    <!--//////////////////////////////////////////////////////////////////////////////////////////////////////////////////-->
    <enable value="true"/>
    <!--//////////////////////////////////////////////////////////////////////////////////////////////////////////////////-->
    <!-- 缓冲大小控制 -->
    <bufferSize value="1000"/>
    <flushInterval value="1000"/>
    <!-- 固化上下文属性，值为 RunContext、UserContext、AppAgent、All 之一，分别可在 ConversionPattern 中通过 %-8property{属性名} 使用以下属性(注意：属性名区分大小写)： -->
    <!--        RunContext 时： 可使用 RunMode、AppName、AppVersion、Machine -->
    <!--        UserContext 时：可使用 RunMode、AppName、AppVersion、Machine、 UserName、UserId、UserToken、UserIP、RawUrl -->
    <!--        AppAgent 时：   可使用 RunMode、AppName、AppVersion、Machine、 AppAgent-Name、AppAgent-Version、AppAgent-Platform、AppAgent-MobileDeviceId、AppAgent-MobileDeviceManufacturer、AppAgent-MobileDeviceModel -->
    <!--        All 时：        可使用 上述全部属性 -->
    <!--  fixContext 不设置的情况下，其默认值为 RunContext -->
    <fixContext value="UserContext"/>
    <!--
      evaluator 属性定义可拦截每一个到达 BufferingForwardingAppender 的日志事件的 ITriggeringEventEvaluator 对象，
                这里使用 LevelEvaluator，即如果任一拦截的日志事件的级别达到其 threshold 属性限定的阙值，缓冲的日志事件会被立即输出；
    -->
    <evaluator type="log4net.Core.LevelEvaluator">
      <!-- 定义缓冲事件立即被输出的 级别阙值 -->
      <threshold value="Warn"/>
    </evaluator>

    <!-- 定义多个子日志输出器，以将日志按级别或类别分别输出到不同的日志文件中，日志事件在输出时将按照子日志输出器的顺序，依次输出。 -->
    <!-- 引用 AllAppender 输出 Debug 级别以上的日志，即输出全部日志。 -->
    <appender-ref ref="AllAppender"/>
    <!-- 引用AllAppender 输出 Warn 级别以上的全部日志。 -->
    <appender-ref ref="ErrorAppender"/>

    <!-- 引用 ServiceAppender 输出 服务请求、处理 相关的日志。 -->
    <appender-ref ref="ServiceAppender"/>
    <!-- 引用 TaskAppender 输出 任务调度、执行 相关的日志。 -->
    <appender-ref ref="TaskAppender"/>

    <appender-ref ref="LogCenterAppender"/>
  </appender>

  <!-- LogCenterAppender 只用于 release 运行模式， demo 情况下的日志不需要输出到日志服务器 -->
  <appender name="LogCenterAppender" type="XMS.Core.Logging.Log4net.LogCenterAppender,XMS.Core">
    <!--//////////////////////////////////////////////////////////////////////////////////////////////////////////////////-->
    <enable value="false"/>
    <!--//////////////////////////////////////////////////////////////////////////////////////////////////////////////////-->
    <filter type="log4net.Filter.LevelRangeFilter">
      <levelMin value="INFO" />
      <levelMax value="FATAL" />
      <acceptOnMatch value="true"/>
    </filter>
  </appender>

  <!-- AllAppender 所有单列之外的其它日志 -->
  <appender name="AllAppender" type="XMS.Core.Logging.Log4net.CustomFileAppender,XMS.Core">
    <!-- 日志文件名（包含路径）-->
    <file value="logs\all\all.log"/>
    <!--//////////////////////////////////////////////////////////////////////////////////////////////////////////////////-->
    <enable value="true"/>
    <directoryByDate value="true"/>
    <!--//////////////////////////////////////////////////////////////////////////////////////////////////////////////////-->
    <!-- 单个日志文件的最大尺寸 -->
    <maximumFileSize value="1000KB"/>
    <lockingModel type="log4net.Appender.FileAppender+ExclusiveLock"/>
    <layout type="XMS.Core.Logging.Log4net.CustomLayout, XMS.Core">
      <conversionPattern value="%date{yyyy-MM-dd HH:mm:ss} %-5level %-8property{RunMode} - %message%newline"/>
    </layout>
    <!-- 首先阻止 Task、ServiceRequest、ServiceHandle 等3种类型的日志 -->
    <filter type="log4net.Filter.PropertyFilter">
      <key value="Category" />
      <regexToMatch value="^(?is:Task)$"/>
      <acceptOnMatch value="false"/>
    </filter>
    <filter type="log4net.Filter.LevelRangeFilter">
      <levelMin value="DEBUG" />
      <levelMax value="FATAL" />
      <acceptOnMatch value="true"/>
    </filter>
  </appender>

  <!-- 输出警告级别以上重要的错误日志 -->
  <appender name="ErrorAppender" type="XMS.Core.Logging.Log4net.CustomFileAppender,XMS.Core">
    <!-- 日志文件名（包含路径）-->
    <file value="logs\error.log"/>
    <!--//////////////////////////////////////////////////////////////////////////////////////////////////////////////////-->
    <enable value="true"/>
    <directoryByDate value="false"/>
    <!--//////////////////////////////////////////////////////////////////////////////////////////////////////////////////-->
    <maximumFileSize value="1000KB"/>
    <lockingModel type="log4net.Appender.FileAppender+ExclusiveLock"/>
    <layout type="XMS.Core.Logging.Log4net.CustomLayout, XMS.Core">
      <conversionPattern value="%date{yyyy-MM-dd HH:mm:ss} %-5level %-8property{RunMode} - %message%newline"/>
    </layout>
    <filter type="log4net.Filter.LevelRangeFilter">
      <levelMin value="Warn" />
      <levelMax value="FATAL" />
      <acceptOnMatch value="true"/>
    </filter>
  </appender>

  <!-- 按类别输出日志，不用的可以注释掉 -->
  <!-- 输出 服务请求、处理 相关的日志 -->
  <appender name="ServiceAppender" type="XMS.Core.Logging.Log4net.CustomFileAppender,XMS.Core">
    <file value="logs\Service\Service.log"/>
    <!--//////////////////////////////////////////////////////////////////////////////////////////////////////////////////-->
    <enable value="true"/>
    <directoryByDate value="true"/>
    <!--//////////////////////////////////////////////////////////////////////////////////////////////////////////////////-->
    <maximumFileSize value="1000KB"/>
    <lockingModel type="log4net.Appender.FileAppender+ExclusiveLock"/>
    <layout type="XMS.Core.Logging.Log4net.CustomLayout, XMS.Core">
      <conversionPattern value="%date{yyyy-MM-dd HH:mm:ss} %-5level %-8property{Category} %-8property{RunMode} - %message%newline"/>
    </layout>
    <filter type="log4net.Filter.PropertyFilter">
      <key value="Category" />
      <regexToMatch value="^(?is:ServiceHandle|ServiceRequest)$"/>
      <acceptOnMatch value="true"/>
    </filter>
    <filter type="log4net.Filter.DenyAllFilter" />
  </appender>

  <!-- 输出 任务 相关的日志 -->
  <appender name="TaskAppender" type="XMS.Core.Logging.Log4net.CustomFileAppender,XMS.Core">
    <file value="logs\Task\Task.log"/>
    <!--//////////////////////////////////////////////////////////////////////////////////////////////////////////////////-->
    <enable value="false"/>
    <directoryByDate value="true"/>
    <!--//////////////////////////////////////////////////////////////////////////////////////////////////////////////////-->
    <maximumFileSize value="1000KB"/>
    <lockingModel type="log4net.Appender.FileAppender+ExclusiveLock"/>
    <layout type="XMS.Core.Logging.Log4net.CustomLayout, XMS.Core">
      <conversionPattern value="%date{yyyy-MM-dd HH:mm:ss} %-5level %-8property{Category} %-8property{RunMode} - %message%newline"/>
    </layout>
    <filter type="log4net.Filter.PropertyFilter">
      <key value="Category" />
      <regexToMatch value="^(?is:Task)$"/>
      <acceptOnMatch value="true"/>
    </filter>
    <filter type="log4net.Filter.DenyAllFilter" />
  </appender>

  <!-- 其它类别请添加在这里 -->










  <!-- ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// -->
  <!-- /////////////////////////////////////////////// demo 运行模式下的日志配置 ///////////////////////////////////////////////////////// -->
  <!-- /////////////////////////////////// 未启用 demo 机制的应用程序或服务请忽略这之后的配置，不需要删除 /////////////////////////////////// -->
  <!-- ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// -->
  <logger name="demo">
    <!--//////////////////////////////////////////////////////////////////////////////////////////////////////////////////-->
    <!--//////////////////////////////////////////////////////////////////////////////////////////////////////////////////-->
    <level value="Debug"/>
    <!--//////////////////////////////////////////////////////////////////////////////////////////////////////////////////-->
    <!--//////////////////////////////////////////////////////////////////////////////////////////////////////////////////-->
    <appender-ref ref="demo"/>
  </logger>

  <!--
    evaluator 属性定义可拦截每一个到达 BufferingForwardingAppender 的日志事件的 ITriggeringEventEvaluator 对象，
              如果任一拦截的日志事件的级别达到其 threshold 属性限定的阙值，缓冲的日志事件会被立即输出；
  -->
  <appender name="demo" type="XMS.Core.Logging.Log4net.CustomBufferAppender,XMS.Core" >
    <!--//////////////////////////////////////////////////////////////////////////////////////////////////////////////////-->
    <enable value="true"/>
    <!--//////////////////////////////////////////////////////////////////////////////////////////////////////////////////-->
    <!-- 缓冲大小控制 -->
    <bufferSize value="1000"/>
    <flushInterval value="5000"/>
    <fixContext value="UserContext"/>
    <evaluator type="log4net.Core.LevelEvaluator">
      <threshold value="Warn"/>
    </evaluator>
    <appender-ref ref="AllAppender_Demo"/>
    <appender-ref ref="ErrorAppender_Demo"/>

    <appender-ref ref="ServiceAppender_Demo"/>
    <appender-ref ref="TaskAppender_Demo"/>
  </appender>

  <!-- 输出调试级别以上级别的日志 -->
  <appender name="AllAppender_Demo" type="XMS.Core.Logging.Log4net.CustomFileAppender,XMS.Core">
    <!-- 日志文件名（包含路径）-->
    <file value="logs\demo\all\all.log"/>
    <!--//////////////////////////////////////////////////////////////////////////////////////////////////////////////////-->
    <enable value="true"/>
    <directoryByDate value="true"/>
    <!--//////////////////////////////////////////////////////////////////////////////////////////////////////////////////-->
    <maximumFileSize value="1000KB"/>
    <lockingModel type="log4net.Appender.FileAppender+MinimalLock"/>
    <layout type="XMS.Core.Logging.Log4net.CustomLayout, XMS.Core">
      <conversionPattern value="%date{yyyy-MM-dd HH:mm:ss} %-5level %-8property{RunMode} - %message%newline"/>
    </layout>
    <!-- 首先阻止 Task、ServiceRequest、ServiceHandle 等3种类型的日志 -->
    <filter type="log4net.Filter.PropertyFilter">
      <key value="Category" />
      <regexToMatch value="^(?is:Task)$"/>
      <acceptOnMatch value="false"/>
    </filter>
    <filter type="log4net.Filter.LevelRangeFilter">
      <levelMin value="DEBUG" />
      <levelMax value="FATAL" />
      <acceptOnMatch value="true"/>
    </filter>
  </appender>

  <!-- 输出警告级别以上重要的错误日志 -->
  <appender name="ErrorAppender_Demo" type="XMS.Core.Logging.Log4net.CustomFileAppender,XMS.Core">
    <file value="logs\demo\error.log"/>
    <!--//////////////////////////////////////////////////////////////////////////////////////////////////////////////////-->
    <enable value="true"/>
    <directoryByDate value="false"/>
    <!--//////////////////////////////////////////////////////////////////////////////////////////////////////////////////-->
    <maximumFileSize value="1000KB"/>
    <lockingModel type="log4net.Appender.FileAppender+MinimalLock"/>
    <layout type="XMS.Core.Logging.Log4net.CustomLayout, XMS.Core">
      <conversionPattern value="%date{yyyy-MM-dd HH:mm:ss} %-5level %-8property{RunMode} - %message%newline"/>
    </layout>
    <filter type="log4net.Filter.LevelRangeFilter">
      <levelMin value="Warn" />
      <levelMax value="FATAL" />
      <acceptOnMatch value="true"/>
    </filter>
  </appender>

  <!-- 输出 服务请求、处理 相关的日志 -->
  <appender name="ServiceAppender_Demo" type="XMS.Core.Logging.Log4net.CustomFileAppender,XMS.Core">
    <file value="logs\demo\Service\Service.log"/>
    <!--//////////////////////////////////////////////////////////////////////////////////////////////////////////////////-->
    <enable value="true"/>
    <directoryByDate value="true"/>
    <!--//////////////////////////////////////////////////////////////////////////////////////////////////////////////////-->
    <maximumFileSize value="1000KB"/>
    <lockingModel type="log4net.Appender.FileAppender+MinimalLock"/>
    <layout type="XMS.Core.Logging.Log4net.CustomLayout, XMS.Core">
      <conversionPattern value="%date{yyyy-MM-dd HH:mm:ss} %-5level %-8property{Category} %-8property{RunMode} - %message%newline"/>
    </layout>
    <filter type="log4net.Filter.PropertyFilter">
      <key value="Category" />
      <regexToMatch value="^(?is:ServiceHandle|ServiceRequest)$"/>
      <acceptOnMatch value="true"/>
    </filter>
    <filter type="log4net.Filter.DenyAllFilter" />
  </appender>

  <!-- 输出 任务 相关的日志 -->
  <appender name="TaskAppender_Demo" type="XMS.Core.Logging.Log4net.CustomFileAppender,XMS.Core">
    <file value="logs\demo\Task\Task.log"/>
    <!--//////////////////////////////////////////////////////////////////////////////////////////////////////////////////-->
    <enable value="false"/>
    <directoryByDate value="true"/>
    <!--//////////////////////////////////////////////////////////////////////////////////////////////////////////////////-->
    <maximumFileSize value="1000KB"/>
    <lockingModel type="log4net.Appender.FileAppender+MinimalLock"/>
    <layout type="XMS.Core.Logging.Log4net.CustomLayout, XMS.Core">
      <conversionPattern value="%date{yyyy-MM-dd HH:mm:ss} %-5level %-8property{Category} %-8property{RunMode} - %message%newline"/>
    </layout>
    <filter type="log4net.Filter.PropertyFilter">
      <key value="Category" />
      <regexToMatch value="^(?is:Task)$"/>
      <acceptOnMatch value="true"/>
    </filter>
    <filter type="log4net.Filter.DenyAllFilter" />
  </appender>

</log4net>
